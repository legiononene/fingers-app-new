@use "sass:math";

$dark: #000000;
$light: #ffffff;
$green: #03c147;
$blue: #5cb6eb;
$pink: #dea6af;
$offLight: #e3e3e2;
$offDark: #0a0a0a;
$orange: #fe8a3d;
$purple: #7649be;
$seaBlue: #214287;
$darkBlue: #0a369d;
$lightBorder: rgba(255, 255, 255, 0.4);

$c-dark-trans: rgba(0, 0, 0, 0.6);
$c-yellow: #f6c844;
$c-red: #e1435f;
$c-red-light: rgba(225, 67, 95, 0.1);
$c-red-hover: rgba(225, 67, 95, 0.2);
$c-bg: #171715;
$c-fg: #212121;
$c-card: #2e2e2e;
$c-text: #fcf6ed;
$c-text-highlight: #d7f57f;
$c-text-off: #fdf7ef;
$c-button-bg: rgba(214, 244, 126, 0.2);
$c-button-hover: rgba(214, 244, 126, 0.4);
$c-select: #454545;
$c-link: rgba(131, 67, 246, 0.6);
$c-link-hover: rgba(131, 67, 246, 0.8);

$e-quart: cubic-bezier(0.76, 0, 0.24, 1);

@function rem($pixel) {
  @if math.is-unitless($pixel) {
    @return math.div($pixel, 16) + rem;
  } @else {
    @error 'Don\'t use units when using the rem() function; only numbers.';
  }
}

@function em($pixel) {
  @if math.is-unitless($pixel) {
    @return math.div($pixel, 16) + em;
  } @else {
    @error 'Don\'t use units when using the em() function; only numbers.';
  }
}

$breakpoint-up: (
  "medium": em(820),
  "large": em(1025),
  "xlarge": em(2040),
);

$breakpoint-down: (
  "medium": em(819.98),
  "large": em(1023.98),
  "xlarge": em(2039.98),
);

@mixin breakpoint($size) {
  @media screen and (min-width: map-get($breakpoint-up, $size)) {
    @content;
  }
}

@mixin breakpoint-down($size) {
  @media screen and (min-width: map-get($breakpoint-down, $size)) {
    @content;
  }
}

@mixin full-width {
  width: 100vw;
  max-width: 100%;
  padding-inline: 4vw;

  @include breakpoint(large) {
    padding-inline: 10vw;
  }

  @include breakpoint(xlarge) {
    padding-inline: 10vw;
  }
}

@mixin full-height {
  height: 100vh;
  height: 100svh;
}

@mixin full-height-header {
  height: calc(100vh - rem(64));
  height: calc(100svh - rem(64));
}

@mixin width-height {
  width: 100%;
  height: 100%;
}

@mixin padding-block {
  padding-block: rem(10);
}

@mixin webSecHero {
  height: calc(100vh - rem(40) - rem(114.4) - rem(60) - rem(1.5));

  @include breakpoint(medium) {
    height: calc(100vh - rem(40) - rem(80.4) - rem(60) - rem(1.5));
  }

  @include breakpoint(large) {
    height: calc(100vh - rem(40) - rem(114.4) - rem(40) - rem(1.5));
  }
}

$b-radius: rem(20);

$p: rem(10);
$p-l: rem(20);
$p-s: rem(5) rem(10);

@mixin text {
  font-size: rem(20);
  font-weight: 500;
  line-height: rem(24);
}

@mixin text-off {
  color: $c-text-off;
  font-size: rem(19);
  font-weight: 500;
}

@mixin fg {
  border-radius: $b-radius;
  background-color: $c-fg;
  padding: $p;
}
